type Achievement {
    id: UUID
    name : String!
    imageUrl: String!
    description: String!
    courseId: UUID!
    userId: UUID
    trackingStartTime: DateTime!
    trackingEndTime: DateTime
}

interface Goal {
    id: UUID!
    achievement: Achievement!
    trackingStartTime: DateTime!
    trackingEndTime: DateTime
}

type OrCombinatorGoal implements Goal{
    id: UUID!
    achievement: Achievement!
    trackingStartTime: DateTime!
    trackingEndTime: DateTime
    goal1: Goal
    goal2: Goal
}

type AndCombinatorGoal implements Goal{
    id: UUID!
    achievement: Achievement!
    trackingStartTime: DateTime!
    trackingEndTime: DateTime
    goal1: Goal
    goal2: Goal
}

type CompleteSpecificChapterGoal implements Goal{
    id: UUID!
    achievement: Achievement!
    trackingStartTime: DateTime!
    trackingEndTime: DateTime
    chapterId: UUID!
}

interface CountableGoal implements Goal{
    id: UUID!
    achievement: Achievement!
    trackingStartTime: DateTime!
    trackingEndTime: DateTime
    requiredCount: Int!
}

type CompleteQuizzesGoal implements CountableGoal & Goal{
    id: UUID!
    achievement: Achievement!
    trackingStartTime: DateTime!
    trackingEndTime: DateTime
    requiredCount: Int!
    minimumScore: Float!
}

type AnswerForumQuestionGoal implements CountableGoal & Goal {
    id: UUID!
    achievement: Achievement!
    trackingStartTime: DateTime!
    trackingEndTime: DateTime
    requiredCount: Int!
}

type LoginStreakGoal implements CountableGoal & Goal {
    id: UUID!
    achievement: Achievement!
    trackingStartTime: DateTime!
    trackingEndTime: DateTime
    requiredCount: Int!
}

interface UserGoalProgressInterface {
    id: UUID!
    user: User!
    goal: Goal!
    completed: Boolean!
}

type User {
    id: UUID!
}

type UserGoalProgress implements UserGoalProgressInterface{
    id: UUID!
    user: User!
    goal: Goal!
    completed: Boolean!
}

type CountableUserGoalProgress implements UserGoalProgressInterface {
    id: UUID!
    user: User!
    goal: CountableGoal!
    completed: Boolean!
    completedCount: Int!
}

input inputAchievement {
    id: UUID
    name : String!
    imageUrl: String!
    goal: inputGoal!
    courseId: UUID!
}

input inputGoal {
    id: UUID!
    trackingStartTime: DateTime!
    trackingEndTime: DateTime
}

input inputOrCombinatorGoal {
    id: UUID!
    trackingStartTime: DateTime!
    trackingEndTime: DateTime
    goal1: inputGoal
    goal2: inputGoal
}

input inputAndCombinatorGoal {
    id: UUID!
    trackingStartTime: DateTime!
    trackingEndTime: DateTime
    goal1: inputGoal
    goal2: inputGoal
}

input inputCompleteSpecificChapterGoal {
    id: UUID!
    trackingStartTime: DateTime!
    trackingEndTime: DateTime
    chapterId: UUID!
}

input inputCountableGoal {
    id: UUID!
    trackingStartTime: DateTime!
    trackingEndTime: DateTime
    requiredCount: Int!
}

input inputCompleteQuizzesGoal {
    id: UUID!
    trackingStartTime: DateTime!
    trackingEndTime: DateTime
    requiredCount: Int!
    minimumScore: Float!
}

input inputAnswerForumQuestionGoal{
    id: UUID!
    trackingStartTime: DateTime!
    trackingEndTime: DateTime
    requiredCount: Int!
}

input inputLoginStreakGoal {
    id: UUID!
    trackingStartTime: DateTime!
    trackingEndTime: DateTime
    requiredCount: Int!
}

input inputUserGoalProgressInterface {
    id: UUID!
    userId: UUID!
    goal: inputGoal!
    completed: Boolean!
}

input inputUserGoalProgress {
    id: UUID!
    userId: UUID!
    goal: inputGoal!
    completed: Boolean!
}

input inputCountableUserGoalProgress {
    id: UUID!
    userId: UUID!
    goal: inputCountableGoal!
    completed: Boolean!
    completedCount: Int!
}